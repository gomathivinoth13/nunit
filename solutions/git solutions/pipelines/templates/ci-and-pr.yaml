parameters:
# solution_filename - (Required) The relative path to the solution file that should be built
- name: solution_filename
  type: string
  default: '**/*.sln'
# solution_build_configuration - (Optional) The build configuration within the solution that should be invoked. 
# Default is Release but can be overwritten if you want to do say a Debug build
- name: solution_build_configuration
  type: string
  default: Release
# solution_target_platform - (Optional) The target platform that the solution build will use. 
# Defaults to Any CPU
- name: solution_target_platform
  type: string
  default: 'Any CPU'
- name: target_feed
  type: string
  default: ''
steps:
# Bootstrap the build
- template: ./bootstrap-build.yaml

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    command: restore
    restoreSolution: ${{parameters.solution_filename}}
    feedsToUse: config
    nugetConfigPath: $(Build.SourcesDirectory)/.nuget/nuget.config
    includeNuGetOrg: true

- task: DotNetCoreCLI@1
  displayName: 'Build Solution'
  inputs:
    command: publish
    publishWebProjects: false
    projects: ${{parameters.solution_filename}}
    arguments: "--configuration ${{ parameters.solution_build_configuration }} --output $(Build.ArtifactStagingDirectory)"

- task: DeleteFiles@1
  displayName: 'Delete files from '
  inputs:
    Contents: '**/*.nupkg'

- task: DotNetCoreCLI@2
  displayName: Pack
  inputs:
    command: pack
    packDirectory: '$(Build.ArtifactStagingDirectory)\'
    versioningScheme: byBuildNumber
    verbosityPack: Normal

- task: NuGetCommand@2
  displayName: 'NuGet push'
  inputs:
    command: push
    publishVstsFeed: ${{parameters.target_Feed}}